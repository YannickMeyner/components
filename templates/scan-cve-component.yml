spec:
  inputs:
    acr_login_server:
      description: 'Azure Container Registry Login Server URL'
    project_name:
      description: 'Project name used for image naming'
    image_tag:
      description: 'Image tag for the image to scan'
    cve_stage:
      default: 'test'
      description: 'Stage for the CVE scanning job'
---
scan_cve:
  stage: $[[ inputs.cve_stage ]]
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
    LOCAL_IMAGE_NAME: "$[[ inputs.acr_login_server ]]/$[[ inputs.project_name ]]:$[[ inputs.image_tag ]]"
    IMAGE_TAR: "$[[ inputs.project_name ]]-$[[ inputs.image_tag ]].tar"
  dependencies:
    - build_image
  before_script:
    - apk add --no-cache curl
    - apk add --no-cache jq
    - curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
    - docker load < "$IMAGE_TAR"
  script:
    - echo "Scanning image $LOCAL_IMAGE_NAME for vulnerabilities"
    - grype "$LOCAL_IMAGE_NAME" -o json > cve-report.json || true
    - echo "Summary of found vulnerabilities:"
    - jq -r '.matches[] | "\(.vulnerability.id) \(.vulnerability.severity) [\(.artifact.name)]"' cve-report.json | head -n 30 || true
  needs:
    - build_image
  artifacts:
    paths:
      - cve-report.json
    expire_in: 30 days