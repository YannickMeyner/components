spec:
  inputs:
    release_stage:
      default: 'release'
      description: 'Stage for the auto-release job'
    draft_mode:
      default: 'true'
      description: 'Whether to create a draft release (true) or publish immediately (false)'
---
auto_release:
  stage: $[[ inputs.release_stage ]]
  image: alpine:latest
  script:
  - apk add --no-cache curl jq git

  # Aktuellen Tag und vorherigen Tag ermitteln
  - export CURRENT_TAG=$CI_COMMIT_TAG
  - export PREV_TAG=$(git describe --tags --abbrev=0 $CURRENT_TAG^ 2>/dev/null || echo "")

  # Changelog generieren
  - |
    if [ -z "$PREV_TAG" ]; then
      CHANGELOG=$(git log --pretty=format:"* %s (%h)" $CURRENT_TAG)
    else
      CHANGELOG=$(git log --pretty=format:"* %s (%h)" $PREV_TAG..$CURRENT_TAG)
    fi

  # JSON-Payload mit jq erstellen
  - |
    PAYLOAD=$(jq -n \
      --arg name "$CURRENT_TAG" \
      --arg tag_name "$CURRENT_TAG" \
      --arg desc "## Changelog: $CHANGELOG" \
      '{name: $name, tag_name: $tag_name, description: $desc, assets: {links: []}}')
    echo "Payload: $PAYLOAD"

  # API-Request
  - |
    curl --request POST \
      --header "PRIVATE-TOKEN: $GITLAB_API_TOKEN" \
      --header "Content-Type: application/json" \
      --data "$PAYLOAD" \
      "https://gitlab.fhnw.ch/api/v4/projects/$CI_PROJECT_ID/releases"
  rules:
    - if: $CI_COMMIT_TAG
      when: on_success